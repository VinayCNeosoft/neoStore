
import React,{useState,useEffect} from 'react'
import {Link, useNavigate} from 'react-router-dom'
import { Container, Button, Card,Row,Col} from 'react-bootstrap'
import { commonProduct ,fetchCartArray} from '../../config/NodeService'
import StarRatings from 'react-star-ratings';
import { useDispatch, useSelector } from "react-redux";

import Banner from './Banner'

function Dashboard(props) {
    const [fetchAllProd,setFetchAllProd] = useState([])
    const [arrlen,setArraylen] = useState(0)
    const [cart, setCart] = useState([]);

    const dispatch = useDispatch();
    const navigate = useNavigate()

    useEffect(()=>{
        let t = localStorage.getItem("token")
        if(t){
            console.log("Token Found")
            if(JSON.stringify(localStorage.getItem("cart"))!==null){
                console.log("Cart is null")
                console.log(JSON.stringify(localStorage.getItem("cart")))
            }
            else{
                let cartArray = JSON.parse(localStorage.getItem("cart"));
                fetchCartArray(localStorage.getItem("email"))
                .then(res=>{
                    if(res.data.success===true){
                        console.log(res.data.data.cart)
                        let c = JSON.stringify(res.data.data.cart)
                        console.log(c)
                        console.log(res.data.message)
                        /* let temp = []
                        let bool = true
                        c.forEach(db=>{
                            bool = true
                            cartArray.forEach(cart=>{
                                if(db._id===cart._id){
                                    cart.quantity = db.quantity + cart.quantity
                                    bool = false
                                }
                            })
                            if(bool) temp.push(db)
                        })
                        let complete_cart = c.concat(temp) */
                        // localStorage.setItem("cart",c)
                        localStorage.setItem("cart",complete_cart)
                        const getcart = JSON.parse(localStorage.getItem("cart"));
                        if (getcart) {
                        setCart(getcart);
                        const count =  JSON.parse(localStorage.getItem("cart")).map(item => Number(item.quantity)).reduce((prev, curr) => prev + curr, 0);
                        console.log("count"+count)
                        dispatch({ type: "count", payload: count });
                    }
                }
            })
            }
        }
        getData()
        if(localStorage.getItem('cart')!==null){
            let arr=JSON.parse(localStorage.getItem('cart'))
            let sum=0
            arr.map((d)=>{
                sum=sum+d.quantity
                localStorage.setItem("cartCount",sum)
                return sum
            })
            setArraylen(sum)
        }
    },[])

    const getData=()=>{
        commonProduct()
        .then(res=>{
            if(res.data.success===true){
                console.log(res.data.allProd)
                const pdata =  res.data.allProd.sort(
                    (a, b) => parseFloat(b.product_rating) - parseFloat(a.product_rating)
                );
                setFetchAllProd(pdata.slice(0,7))
            }
            else if(res.data.success===false){
                console.log(res.data)
                alert(`${res.data.message}`)
            }
            else{
                console.log("")
            }
        })
    }

    console.log(fetchAllProd)
    const addToCart =(prod,quant)=>{
        let _id = prod._id
        let product_name = prod.product_name
        let product_producer = prod.product_producer
        let product_cost = prod.product_cost
        let product_image = prod.product_image[0]
        let product_stock = prod.product_stock
        let quantity = quant.quantity
        let prod_status = 0
        console.log(_id,product_name,product_cost,product_image,quantity,product_producer,product_stock)
        if(localStorage.getItem('cart')!==null)
        {
            let arr=JSON.parse(localStorage.getItem('cart'))
            console.log(arr)
            if(arr.some(e=>e._id===_id)){
                arr.map((d)=>{
                    if(d._id===_id){
                    return (
                        d.quantity=d.quantity+1,prod_status = product_stock-1,quantity=d.quantity
                    )
                }
                return arr
                })
                localStorage.setItem('cart',JSON.stringify(arr))
                alert('Quantity Added !')
                let array=JSON.parse(localStorage.getItem('cart'))
                const count = array
                    .map((item) => Number(item.quantity))
                    .reduce((prev, curr) => prev + curr, 0);
                console.log("count"+count)
                dispatch({ type: "count", payload: count })
            }
            else{
                arr.push({_id,quantity,product_name,product_image,product_cost,product_producer})
                localStorage.setItem('cart',JSON.stringify(arr))
                alert('Product Added to Cart !')
                let array=JSON.parse(localStorage.getItem('cart'))
                const count = array
                    .map((item) => Number(item.quantity))
                    .reduce((prev, curr) => prev + curr, 0);
                console.log("count"+count)
                dispatch({ type: "count", payload: count })
            }
        }
        else{
            let arr=[{_id,quantity,product_name,product_image,product_cost,product_producer}]
            arr.push()
            localStorage.setItem('cart',JSON.stringify(arr))
            alert('Product Added to Cart !')
            let array=JSON.parse(localStorage.getItem('cart'))
            const count = array.map((item) => Number(item.quantity)).reduce((prev, curr) => prev + curr, 0);
            console.log("count"+count)
            dispatch({ type: "count", payload: count })
        }
    };

    return (
        <>
        <Container fluid="true">
            <Banner/>
            <br/>
            <h2 className='text-center'>Popular Products</h2>
        </Container>

            <Container className='mx-auto my-2 justify-content-md-center justify-content-lg-center'>
            <hr/>
            <Row xs={1} md={2} lg={3} className="g-4 my-1">
            {fetchAllProd.map((ele,i)=>(
                <Col key={i}>
                <Card key={i}>
                    <Link to={`/product/${ele._id}`} >
                        <Card.Img variant="top" src={ele.product_image[0]} style={{height:"250px"}}/>
                    </Link>
                    <Card.Body>
                        <Card.Title style={{height:"70px"}}>{ele.product_name}</Card.Title>
                            <div style={{float:"right",display:"block"}}>
                                <Card.Text>
                                    <b>â‚¹ {ele.product_cost}/-</b>
                                </Card.Text>
                            </div>
                            <br/>
                            <div className='text-center'>
                                <Button variant="danger" style={{width:"auto"}} onClick={()=>addToCart(ele,{quantity:1})}>Add to Cart</Button>
                                <Container>
                                <br/>
                                <StarRatings
                                    rating={ele.product_rating}
                                    starRatedColor="orange"
                                    numberOfStars={5}
                                    name='rating'
                                    starDimension="30px"
                                />
                                </Container>
                            </div>
                        </Card.Body>
                    </Card>
                    </Col>
                ))}
                </Row>
            </Container>
            <div className='text-center'>
                <h4><Link to="/commonproduct">View More...</Link></h4>
            </div>
        </>
    )
}

export default Dashboard
